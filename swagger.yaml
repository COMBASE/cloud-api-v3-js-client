---
swagger: "2.0"
info:
  description: "Our api provides access to our cloud services"
  version: "3.0.0"
  title: "KORONA.cloud API v3"
  contact:
    name: "support@combase.net"
  license:
    name: "KORONA.cloud API License"
    url: "https://support.korona.de/agb/"
host: "www.koronacloud.com"
basePath: "/web/api/v3"
tags:
- name: "inventories"
  description: "(KORONA.retail required)"
- name: "stock receipts"
  description: "(KORONA.retail required)"
- name: "accounts"
- name: "additional receipt info types"
- name: "assortments"
- name: "cashiers"
- name: "commodity groups"
- name: "currencies"
- name: "customer groups"
- name: "customer orders"
- name: "customers"
- name: "economic zones"
- name: "ticketing"
- name: "images"
- name: "info texts"
- name: "korona account"
- name: "organizational units"
- name: "payment methods"
- name: "points of sale"
- name: "price groups"
- name: "products"
- name: "receipts"
- name: "sales taxes"
- name: "sectors"
- name: "statistics"
- name: "suppliers"
- name: "tags"
paths:
  /accounts/{koronaAccountId}/accounts/{accountIdOrNumber}:
    get:
      tags:
      - "accounts"
      summary: "returns the single account"
      description: ""
      operationId: "getAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/accounts:
    get:
      tags:
      - "accounts"
      summary: "lists all accounts"
      description: ""
      operationId: "getAccounts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListAccount"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/additionalReceiptInfoTypes/{additionalReceiptInfoTypeId}:
    get:
      tags:
      - "additional receipt info types"
      summary: "returns the single additional receipt info type"
      description: ""
      operationId: "getAdditionalReceiptInfoType"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "additionalReceiptInfoTypeId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AdditionalReceiptInfoType"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/additionalReceiptInfoTypes:
    get:
      tags:
      - "additional receipt info types"
      summary: "lists all additional receipt info types"
      description: ""
      operationId: "getAdditionalReceiptInfoTypes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListAdditionalReceiptInfoType"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/assortments/{assortmentId}:
    get:
      tags:
      - "assortments"
      summary: "returns the single assortment"
      description: ""
      operationId: "getAssortment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "assortmentId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Assortment"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/assortments:
    get:
      tags:
      - "assortments"
      summary: "lists all assortments"
      description: ""
      operationId: "getAssortments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListAssortment"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/cashiers:
    get:
      tags:
      - "cashiers"
      summary: "lists all cashiers"
      description: ""
      operationId: "getCashiers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListCashier"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/cashiers/{cashierIdOrNumber}:
    get:
      tags:
      - "cashiers"
      summary: "returns the single cashier"
      description: ""
      operationId: "getCashier"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cashierIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Cashier"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/commodityGroups/{commodityGroupId}:
    get:
      tags:
      - "commodity groups"
      summary: "returns the single commodity group"
      description: ""
      operationId: "getCommodityGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "commodityGroupId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CommodityGroup"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    delete:
      tags:
      - "commodity groups"
      summary: "deletes the single commodity group"
      description: ""
      operationId: "deleteCommodityGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "commodityGroupId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, delete on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "commodity groups"
      summary: "updates the single commodity group"
      description: ""
      operationId: "updateCommodityGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "commodityGroupId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the properties to update of the commodity group"
        required: true
        schema:
          $ref: "#/definitions/CommodityGroup"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/commodityGroups:
    get:
      tags:
      - "commodity groups"
      summary: "lists all commodity groups"
      description: ""
      operationId: "getCommodityGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListCommodityGroup"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "commodity groups"
      summary: "adds a batch of new commodity groups"
      description: ""
      operationId: "addCommodityGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "a array of new commodity groups"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CommodityGroup"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "commodity groups"
      summary: "updates a batch of commodity groups"
      description: "[number] must be set in the objects, otherwise the object cannot\
        \ be updated"
      operationId: "updateCommodityGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "a array of existing commodity groups"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CommodityGroup"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/currencies/{currencyId}:
    get:
      tags:
      - "currencies"
      summary: "returns the single currency"
      description: ""
      operationId: "getCurrency"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "currencyId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Currency"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/currencies:
    get:
      tags:
      - "currencies"
      summary: "lists all currencies"
      description: ""
      operationId: "getCurrencies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListCurrency"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/customerGroups/{customerGroupId}:
    get:
      tags:
      - "customer groups"
      summary: "returns the single customer group"
      description: ""
      operationId: "getCustomerGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customerGroupId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CustomerGroup"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/customerGroups:
    get:
      tags:
      - "customer groups"
      summary: "lists all customer groups"
      description: ""
      operationId: "getCustomerGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListCustomerGroup"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/customerOrders/{customerOrderId}:
    get:
      tags:
      - "customer orders"
      summary: "returns the single customer order"
      description: ""
      operationId: "getCustomerOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customerOrderId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CustomerOrder"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    delete:
      tags:
      - "customer orders"
      summary: "deletes the single customer order"
      description: ""
      operationId: "deleteCustomerOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customerOrderId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
        pattern: "(\\w+)?"
      - name: "number"
        in: "query"
        description: "number of the related object"
        required: false
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, delete on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "customer orders"
      summary: "updates the single customer order"
      description: ""
      operationId: "updateCustomerOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customerOrderId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the properties to update of the customer order"
        required: true
        schema:
          $ref: "#/definitions/CustomerOrder"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/customerOrders:
    get:
      tags:
      - "customer orders"
      summary: "lists all customer orders"
      description: ""
      operationId: "getCustomerOrders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "minCreateTime"
        in: "query"
        description: "min (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxCreateTime"
        in: "query"
        description: "max (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "minPickUpTime"
        in: "query"
        description: "min (inclusive) pick up time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxPickUpTime"
        in: "query"
        description: "max (inclusive) pick up time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListCustomerOrder"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "customer orders"
      summary: "adds a batch of new customer orders"
      description: ""
      operationId: "addCustomerOrders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "a array of new customer orders"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomerOrder"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "customer orders"
      summary: "updates a batch of customer orders"
      description: "[number] must be set in the objects, otherwise the object cannot\
        \ be updated"
      operationId: "updateCustomerOrders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "a array of existing customer orders"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomerOrder"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/customers/{customerId}:
    get:
      tags:
      - "customers"
      summary: "returns the single customer"
      description: ""
      operationId: "getCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    delete:
      tags:
      - "customers"
      summary: "deletes the single customer"
      description: ""
      operationId: "deleteCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, delete on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "customers"
      summary: "updates the single customer"
      description: ""
      operationId: "updateCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the properties to update of the customer"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/customers:
    get:
      tags:
      - "customers"
      summary: "lists all customers"
      description: ""
      operationId: "getCustomers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListCustomer"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "customers"
      summary: "adds a batch of new customers"
      description: ""
      operationId: "addCustomers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "a array of new customers"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Customer"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "customers"
      summary: "updates a batch of customers"
      description: "[number] must be set in the objects, otherwise the object cannot\
        \ be updated"
      operationId: "updateCustomers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "a array of existing customers"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Customer"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/economicZones/{economicZoneId}:
    get:
      tags:
      - "economic zones"
      summary: "returns the single economic zone"
      description: ""
      operationId: "getEconomicZone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "economicZoneId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EconomicZone"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/economicZones:
    get:
      tags:
      - "economic zones"
      summary: "lists all economic zones"
      description: ""
      operationId: "getEconomicZones"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListEconomicZone"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/entryGates:
    get:
      tags:
      - "ticketing"
      summary: "lists all entry gates"
      description: ""
      operationId: "getEntryGates"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListEntryGate"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/entryGates/{entryGateId}:
    get:
      tags:
      - "ticketing"
      summary: "returns the single entry gate"
      description: ""
      operationId: "getEntryGate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "entryGateId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/EntryGate"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/events/{eventId}:
    get:
      tags:
      - "ticketing"
      summary: "return the single event"
      description: ""
      operationId: "getEvent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/events:
    get:
      tags:
      - "ticketing"
      summary: "lists all events"
      description: ""
      operationId: "getEvents"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListEvent"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/images/{imageId}:
    get:
      tags:
      - "images"
      summary: "displays the image"
      description: ""
      operationId: "getImage"
      produces:
      - "image/png"
      - "image/jpg"
      parameters:
      - name: "imageId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/infoTexts:
    get:
      tags:
      - "info texts"
      summary: "lists all info texts"
      description: ""
      operationId: "getInfoTexts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListInfoText"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/infoTexts/{infoTextId}:
    get:
      tags:
      - "info texts"
      summary: "returns the single info text"
      description: ""
      operationId: "getInfoText"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "infoTextId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InfoText"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/inventories/{inventoryId}/inventoryLists:
    get:
      tags:
      - "inventories"
      summary: "lists all inventory lists"
      description: ""
      operationId: "getInventoryInventoryLists"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "minCreateTime"
        in: "query"
        description: "min (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxCreateTime"
        in: "query"
        description: "max (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "minBookingTime"
        in: "query"
        description: "min (inclusive) booking time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxBookingTime"
        in: "query"
        description: "max (inclusive) booking time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "bookingStatus"
        in: "query"
        description: "booking status (possible values: BOOKED, IN_PROGRESS)"
        required: false
        type: "string"
        enum:
        - "BOOKED"
        - "IN_PROGRESS"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListInventoryList"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/inventories/{inventoryId}:
    get:
      tags:
      - "inventories"
      summary: "returns the single inventory"
      description: ""
      operationId: "getInventory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Inventory"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    delete:
      tags:
      - "inventories"
      summary: "deletes the single inventory (only allowed if hasBookedReceipts=false)"
      description: ""
      operationId: "deleteInventory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, delete on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "inventories"
      summary: "updates the single inventory"
      description: ""
      operationId: "updateInventory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the properties to update of the inventory"
        required: true
        schema:
          $ref: "#/definitions/Inventory"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/inventories/{inventoryId}/inventoryLists/{inventoryListId}:
    get:
      tags:
      - "inventories"
      summary: "returns the single inventory list"
      description: ""
      operationId: "getInventoryInventoryList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "inventoryListId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InventoryList"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "inventories"
      summary: "updates the single inventory list"
      description: ""
      operationId: "updateInventoryInventoryList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "inventoryListId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "data to update"
        required: true
        schema:
          $ref: "#/definitions/InventoryList"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/inventories/{inventoryId}/inventoryLists/{inventoryListId}/items/{productId}:
    get:
      tags:
      - "inventories"
      summary: "returns the single inventory list item"
      description: ""
      operationId: "getInventoryInventoryListItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "inventoryListId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "productId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InventoryListItem"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    delete:
      tags:
      - "inventories"
      summary: "deletes the single inventory list item"
      description: ""
      operationId: "deleteInventoryInventoryListItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "inventoryListId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "productId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, delete on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "inventories"
      summary: "updates the single inventory list item"
      description: ""
      operationId: "updateInventoryInventoryListItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "inventoryListId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "productId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "data to update"
        required: true
        schema:
          $ref: "#/definitions/InventoryListItem"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/inventories/{inventoryId}/inventoryLists/{inventoryListId}/items:
    get:
      tags:
      - "inventories"
      summary: "lists all inventory list items"
      description: ""
      operationId: "getInventoryInventoryListItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "inventoryListId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListInventoryListItem"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "inventories"
      summary: "adds inventory list items"
      description: ""
      operationId: "addInventoryInventoryListItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "inventoryListId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "data to update"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/InventoryListItem"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "inventories"
      summary: "updates inventory list items (property [product] required))"
      description: ""
      operationId: "updateInventoryInventoryListItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "inventoryId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "inventoryListId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "a array of inventory list items to update"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/InventoryListItem"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/inventories:
    get:
      tags:
      - "inventories"
      summary: "lists all inventories"
      description: ""
      operationId: "getInventories"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListInventory"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "inventories"
      summary: "adds a batch of new inventories"
      description: ""
      operationId: "addInventories"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "a array of new inventories"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Inventory"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}:
    get:
      tags:
      - "korona account"
      summary: "returns the single korona account"
      description: ""
      operationId: "getKoronaAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/KoronaAccount"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}:
    get:
      tags:
      - "organizational units"
      summary: "returns the single organizational unit"
      description: ""
      operationId: "getOrganizationalUnit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrganizationalUnit"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/organizationalUnits:
    get:
      tags:
      - "organizational units"
      summary: "lists all organizational units"
      description: ""
      operationId: "getOrganizationalUnits"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListOrganizationalUnit"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/dayRatings:
    get:
      tags:
      - "organizational units"
      summary: "lists all organizational unit related day ratings"
      description: ""
      operationId: "getOrganizationalUnitDayRatings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListDayRating"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "organizational units"
      summary: "adds a batch of new day ratings"
      description: ""
      operationId: "addOrganizationalUnitDayRatings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "a array of new day ratings"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/DayRating"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "organizational units"
      summary: "updates a batch of day ratings"
      description: ""
      operationId: "updateOrganizationalUnitDayRatings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "a array of new day ratings"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/DayRating"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/dayRatings/{dayRatingIdOrDate}:
    get:
      tags:
      - "organizational units"
      summary: "returns the single day rating by its id or date"
      description: ""
      operationId: "getOrganizationalUnitDayRating"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "dayRatingIdOrDate"
        in: "path"
        description: "the id or date (YYYY-MM-DD) of the day rating"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/DayRating"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    delete:
      tags:
      - "organizational units"
      summary: "deletes the single day rating by its id or date"
      description: ""
      operationId: "deleteOrganizationalUnitDayRating"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "dayRatingIdOrDate"
        in: "path"
        description: "the id or date (YYYY-MM-DD) of the day rating"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, delete on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "organizational units"
      summary: "updates the day rating by its id or date"
      description: ""
      operationId: "updateOrganizationalUnitDayRating"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "dayRatingIdOrDate"
        in: "path"
        description: "the id or date (YYYY-MM-DD) of the day rating"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the properties to update of the day rating"
        required: true
        schema:
          $ref: "#/definitions/DayRating"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/inventoryLists:
    get:
      tags:
      - "organizational units"
      summary: "lists the inventory lists belonging to the organizational unit (KORONA.retail\
        \ required)"
      description: ""
      operationId: "getOrganizationalUnitInventoryLists"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "minCreateTime"
        in: "query"
        description: "min (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxCreateTime"
        in: "query"
        description: "max (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "minBookingTime"
        in: "query"
        description: "min (inclusive) booking time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxBookingTime"
        in: "query"
        description: "max (inclusive) booking time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "bookingStatus"
        in: "query"
        description: "booking status (possible values: BOOKED, IN_PROGRESS)"
        required: false
        type: "string"
        enum:
        - "BOOKED"
        - "IN_PROGRESS"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListInventoryList"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/productStocks:
    get:
      tags:
      - "organizational units"
      summary: "lists the product stocks of the organizational unit, in case it contains\
        \ a warehouse (KORONA.retail required)"
      description: ""
      operationId: "getOrganizationalUnitProductStocks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListProductStock"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/organizationalUnits/{organizationalUnitId}/stockReceipts:
    get:
      tags:
      - "organizational units"
      summary: "lists the stock receipts belonging to the organizational unit (KORONA.retail\
        \ required)"
      description: ""
      operationId: "getOrganizationalUnitStockReceipts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnitId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "minCreateTime"
        in: "query"
        description: "min (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxCreateTime"
        in: "query"
        description: "max (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "minBookingTime"
        in: "query"
        description: "min (inclusive) booking time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxBookingTime"
        in: "query"
        description: "max (inclusive) booking time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "sourceOrganizationalUnit"
        in: "query"
        description: "source organizational unit"
        required: false
        type: "string"
      - name: "bookingStatus"
        in: "query"
        description: "booking status (possible values: BOOKED, IN_PROGRESS)"
        required: false
        type: "string"
        enum:
        - "BOOKED"
        - "IN_PROGRESS"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListStockReceipt"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/paymentMethods/{paymentMethodId}:
    get:
      tags:
      - "payment methods"
      summary: "returns the single payment method"
      description: ""
      operationId: "getPaymentMethod"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentMethodId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PaymentMethod"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/paymentMethods:
    get:
      tags:
      - "payment methods"
      summary: "lists all payment methods"
      description: ""
      operationId: "getPaymentMethods"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListPaymentMethod"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}:
    get:
      tags:
      - "points of sale"
      summary: "returns the single point of sale"
      description: ""
      operationId: "getPointOfSale"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "couplingId"
        in: "query"
        description: "the coupling-id of the device. It can be set to check whether\
          \ your coupling-id is correct or not (works only, if point of sale is external)."
        required: false
        type: "string"
      - name: "pointOfSaleId"
        in: "path"
        description: "the number of the point of sale"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pos"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "points of sale"
      summary: "updates a point of sale (works only for coupling (attribute 'couplingId')\
        \ or updating device information (attribute 'deviceInformation'))"
      description: ""
      operationId: "updatePointOfSale"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pointOfSaleId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "couplingId"
        in: "query"
        description: "the coupling-id of the device (required if already coupled)"
        required: false
        type: "string"
      - name: "decouple"
        in: "query"
        description: "executes uncoupling, if set to true, device will be uncoupled\
          \ if point of sale is already coupled"
        required: false
        type: "boolean"
      - in: "body"
        name: "body"
        description: "the properties to update of the point of sale ('couplingId'\
          \ only)"
        required: true
        schema:
          $ref: "#/definitions/Pos"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts:
    get:
      tags:
      - "points of sale"
      summary: "lists all point of sale-related receipts"
      description: ""
      operationId: "getPointOfSaleReceipts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pointOfSaleId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "couplingId"
        in: "query"
        description: "the coupling-id of the device. It can be set to check whether\
          \ your coupling-id is correct or not (works only, if point of sale is external)."
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "zCount"
        in: "query"
        description: "z-count of the receipt"
        required: false
        type: "integer"
        format: "int64"
      - name: "minCreateTime"
        in: "query"
        description: "min (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxCreateTime"
        in: "query"
        description: "max (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListReceipt"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "points of sale"
      summary: "adds a batch of point of sale-related receipts"
      description: ""
      operationId: "addPointOfSaleReceipts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pointOfSaleId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "couplingId"
        in: "query"
        description: "the coupling-id of the device"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the receipts to add"
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Receipt"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/endOfDayStatements:
    get:
      tags:
      - "points of sale"
      summary: "lists all point of sale-related end-of-day-statements"
      description: ""
      operationId: "getPointOfSaleEndOfDayStatements"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pointOfSaleId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "couplingId"
        in: "query"
        description: "the coupling-id of the device"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListEndOfDayStatement"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "points of sale"
      summary: "adds a batch of point of sale-related end-of-day-statements"
      description: ""
      operationId: "addPointOfSaleEndOfDayStatements"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pointOfSaleId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "couplingId"
        in: "query"
        description: "the coupling-id of the device"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the end-of-day-statements to add"
        required: false
        schema:
          type: "array"
          items:
            $ref: "#/definitions/EndOfDayStatement"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/pointsOfSale/{pointOfSaleId}/receipts/{receiptId}:
    get:
      tags:
      - "points of sale"
      summary: "returns the single point of sale-related receipt"
      description: ""
      operationId: "getPointOfSaleReceipt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pointOfSaleId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "receiptId"
        in: "path"
        description: "the id of the receipt"
        required: true
        type: "string"
      - name: "couplingId"
        in: "query"
        description: "the coupling-id of the device. It can be set to check whether\
          \ your coupling-id is correct or not (works only, if point of sale is external)."
        required: false
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Receipt"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/pointsOfSale:
    get:
      tags:
      - "points of sale"
      summary: "lists all points of sale"
      description: ""
      operationId: "getPointsOfSale"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListPos"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/priceGroups/{priceGroupId}:
    get:
      tags:
      - "price groups"
      summary: "returns the single price group"
      description: ""
      operationId: "getPriceGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "priceGroupId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PriceGroup"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/priceGroups:
    get:
      tags:
      - "price groups"
      summary: "lists all price groups"
      description: ""
      operationId: "getPriceGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListPriceGroup"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/products/{productId}:
    get:
      tags:
      - "products"
      summary: "returns the single product"
      description: ""
      operationId: "getProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    delete:
      tags:
      - "products"
      summary: "deletes the single product"
      description: ""
      operationId: "deleteProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, delete on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "products"
      summary: "updates the single product"
      description: "if [number] is set, the number of the object will change and the\
        \ resource location as well"
      operationId: "updateProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the properties to update of the product"
        required: true
        schema:
          $ref: "#/definitions/Product"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/products:
    get:
      tags:
      - "products"
      summary: "lists all products"
      description: ""
      operationId: "getProducts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "productCodes"
        in: "query"
        description: "at least one product code to filter by (multiple separated by\
          \ comma; max. 10)"
        required: false
        type: "string"
      - name: "commodityGroup"
        in: "query"
        description: "commodity group id  to filter by"
        required: false
        type: "string"
      - name: "assortment"
        in: "query"
        description: "assortment id to filter by"
        required: false
        type: "string"
      - name: "tag"
        in: "query"
        description: "tag id to filter by"
        required: false
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListProduct"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "products"
      summary: "adds a batch of new products"
      description: ""
      operationId: "addProducts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "array of new products"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Product"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "products"
      summary: "updates a batch of products"
      description: "[number] must be set in the objects, otherwise the object cannot\
        \ be updated"
      operationId: "updateProducts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "a array of existing products"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Product"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/products/{productId}/stocks:
    get:
      tags:
      - "products"
      summary: "lists the product stocks in different warehouses (KORONA.retail required)"
      description: ""
      operationId: "getProductStocks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListProductStock"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/receipts:
    get:
      tags:
      - "receipts"
      summary: "lists all receipts"
      description: ""
      operationId: "getReceipts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "pointOfSale"
        in: "query"
        description: "point of sale"
        required: false
        type: "string"
      - name: "organizationalUnit"
        in: "query"
        description: "organizational unit"
        required: false
        type: "string"
      - name: "zCount"
        in: "query"
        description: "z-count of the receipt"
        required: false
        type: "integer"
        format: "int64"
      - name: "minCreateTime"
        in: "query"
        description: "min (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxCreateTime"
        in: "query"
        description: "max (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListReceipt"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/receipts/{receiptId}:
    get:
      tags:
      - "receipts"
      summary: "returns the single receipt"
      description: ""
      operationId: "getReceipt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "receiptId"
        in: "path"
        description: "id of the receipt"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Receipt"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/salesTaxes/{salesTaxId}:
    get:
      tags:
      - "sales taxes"
      summary: "returns the single sales tax"
      description: ""
      operationId: "getSalesTax"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "salesTaxId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SalesTax"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/salesTaxes:
    get:
      tags:
      - "sales taxes"
      summary: "lists all sales taxes"
      description: ""
      operationId: "getSalesTaxes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListSalesTax"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/sectors/{sectorId}:
    get:
      tags:
      - "sectors"
      summary: "returns the single sector"
      description: ""
      operationId: "getSector"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "sectorId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Sector"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/sectors:
    get:
      tags:
      - "sectors"
      summary: "lists all sectors"
      description: ""
      operationId: "getSectors"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListSector"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/statistics/revenueData:
    get:
      tags:
      - "statistics"
      summary: "returns information about the revenue in the given period"
      description: ""
      operationId: "getRevenue"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnit"
        in: "query"
        description: "number of the organizational unit"
        required: false
        type: "string"
      - name: "period"
        in: "query"
        description: "time period for comparison"
        required: false
        type: "string"
        enum:
        - "DAY"
        - "WEEK"
        - "MONTH"
        - "YEAR"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StatisticRevenueData"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/statistics/topSeller:
    get:
      tags:
      - "statistics"
      summary: "returns the top-seller"
      description: ""
      operationId: "getTopSeller"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnit"
        in: "query"
        description: "number of the organizational unit"
        required: false
        type: "string"
      - name: "period"
        in: "query"
        description: "time period for comparison"
        required: false
        type: "string"
        enum:
        - "DAY"
        - "WEEK"
        - "MONTH"
        - "YEAR"
      - name: "limit"
        in: "query"
        description: "maximum number of products to show"
        required: false
        type: "integer"
        format: "int32"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StatisticListTopSeller"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/statistics/revenueDataForCustomerGroups:
    get:
      tags:
      - "statistics"
      summary: "returns the turnover per customer group during the given period"
      description: ""
      operationId: "getRevenueForCustomerGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnit"
        in: "query"
        description: "number of the organizational unit"
        required: false
        type: "string"
      - name: "period"
        in: "query"
        description: "time period for comparison"
        required: false
        type: "string"
        enum:
        - "DAY"
        - "WEEK"
        - "MONTH"
        - "YEAR"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StatisticMapStringRevenueData"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/statistics/revenueDataHourly:
    get:
      tags:
      - "statistics"
      summary: "returns the turnover per hour during the given period"
      description: ""
      operationId: "getRevenueHourly"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "organizationalUnit"
        in: "query"
        description: "number of the organizational unit"
        required: false
        type: "string"
      - name: "period"
        in: "query"
        description: "time period for comparison"
        required: false
        type: "string"
        enum:
        - "DAY"
        - "WEEK"
        - "MONTH"
        - "YEAR"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StatisticMapStringRevenueData"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/stockReceipts:
    get:
      tags:
      - "stock receipts"
      summary: "lists all stock-receipts"
      description: ""
      operationId: "getStockReceipts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "minCreateTime"
        in: "query"
        description: "min (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxCreateTime"
        in: "query"
        description: "max (inclusive) create time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "minBookingTime"
        in: "query"
        description: "min (inclusive) booking time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "maxBookingTime"
        in: "query"
        description: "max (inclusive) booking time of the receipt (ISO 8601; date,\
          \ time and timezone)"
        required: false
        type: "string"
        format: "date-time"
      - name: "organizationalUnit"
        in: "query"
        description: "organizational unit"
        required: false
        type: "string"
      - name: "sourceOrganizationalUnit"
        in: "query"
        description: "source organizational unit"
        required: false
        type: "string"
      - name: "bookingStatus"
        in: "query"
        description: "booking status (possible values: BOOKED, IN_PROGRESS)"
        required: false
        type: "string"
        enum:
        - "BOOKED"
        - "IN_PROGRESS"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListStockReceipt"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "stock receipts"
      summary: "adds stock-receipts"
      description: ""
      operationId: "addStockReceipts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "data to add"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/StockReceipt"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/stockReceipts/{stockReceiptIdOrNumber}:
    get:
      tags:
      - "stock receipts"
      summary: "returns the single stock-receipt"
      description: ""
      operationId: "getStockReceipt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "stockReceiptIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StockReceipt"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "stock receipts"
      summary: "updates the single stock-receipt"
      description: ""
      operationId: "updateStockReceipt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "stockReceiptIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "data to update"
        required: true
        schema:
          $ref: "#/definitions/StockReceipt"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/stockReceipts/{stockReceiptIdOrNumber}/items:
    get:
      tags:
      - "stock receipts"
      summary: "lists all stock-receipt items"
      description: ""
      operationId: "getStockReceiptItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "stockReceiptIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListStockReceiptItem"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "stock receipts"
      summary: "adds stock-receipt items"
      description: ""
      operationId: "addStockReceiptItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "stockReceiptIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "data to add"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/StockReceiptItem"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "stock receipts"
      summary: "updates stock-receipt items"
      description: ""
      operationId: "updateStockReceiptItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "stockReceiptIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "data to update"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/StockReceiptItem"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/stockReceipts/{stockReceiptIdOrNumber}/items/{productIdOrNumber}:
    get:
      tags:
      - "stock receipts"
      summary: "returns the single stock-receipt item"
      description: ""
      operationId: "getStockReceiptItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "stockReceiptIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "productIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StockReceiptItem"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    delete:
      tags:
      - "stock receipts"
      summary: "deletes the single stock-receipt item"
      description: ""
      operationId: "deleteStockReceiptItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "stockReceiptIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "productIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "stock receipts"
      summary: "updates the single stock-receipt item"
      description: ""
      operationId: "updateStockReceiptItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "stockReceiptIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "productIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "data to update"
        required: true
        schema:
          $ref: "#/definitions/StockReceiptItem"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/MethodNotAllowedError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/suppliers/{supplierIdOrNumber}:
    get:
      tags:
      - "suppliers"
      summary: "returns the single supplier"
      description: ""
      operationId: "getSupplier"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "supplierIdOrNumber"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Supplier"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/suppliers:
    get:
      tags:
      - "suppliers"
      summary: "lists all suppliers"
      description: ""
      operationId: "getSuppliers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListSupplier"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/tags:
    get:
      tags:
      - "tags"
      summary: "lists all tags"
      description: ""
      operationId: "getTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListTag"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    post:
      tags:
      - "tags"
      summary: "adds a batch of new tags"
      description: ""
      operationId: "addTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "array of new tags"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Tag"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "tags"
      summary: "updates a batch of tags"
      description: "[number] must be set in the objects, otherwise the object cannot\
        \ be updated"
      operationId: "updateTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "array of existing tags"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Tag"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AddOrUpdateResult"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/tags/{tagId}:
    get:
      tags:
      - "tags"
      summary: "returns the single tag"
      description: ""
      operationId: "getTag"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "tagId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Tag"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    delete:
      tags:
      - "tags"
      summary: "deletes the single tag"
      description: ""
      operationId: "deleteTag"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "tagId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, delete on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
    patch:
      tags:
      - "tags"
      summary: "updates the single tag"
      description: ""
      operationId: "updateTag"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "tagId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "the properties to update of the tag"
        required: true
        schema:
          $ref: "#/definitions/Tag"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        204:
          description: "Request successful, patch on single resource does not return\
            \ any content"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/ticketDefinitions:
    get:
      tags:
      - "ticketing"
      summary: "lists all ticket definitions"
      description: ""
      operationId: "getTicketDefinitions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "number of the page to fetch"
        required: false
        type: "integer"
        format: "int32"
      - name: "size"
        in: "query"
        description: "amount of objects to return per page"
        required: false
        type: "integer"
        format: "int32"
      - name: "sort"
        in: "query"
        description: "attribute to sort by (multiple separated by comma; max. 5)"
        required: false
        type: "string"
      - name: "revision"
        in: "query"
        description: "last revision number, objects with a greater revision than this\
          \ will be returned"
        required: false
        type: "integer"
        format: "int64"
      - name: "includeDeleted"
        in: "query"
        description: "indicates deleted objects should be loaded or not (default:\
          \ false)"
        required: false
        type: "boolean"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultListTicketDefinition"
        204:
          description: "Request successful, but the list is empty. Either there is\
            \ in general no object on the list or a set filter/restriction in querystring\
            \ doesn't match any object."
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
  /accounts/{koronaAccountId}/ticketDefinitions/{ticketDefinitionId}:
    get:
      tags:
      - "ticketing"
      summary: "returns the single ticket definition"
      description: ""
      operationId: "getTicketDefinition"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ticketDefinitionId"
        in: "path"
        description: "id of the related object (important: id should match the uuid-format)"
        required: true
        type: "string"
      - name: "koronaAccountId"
        in: "path"
        description: "account id of the korona.cloud account"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TicketDefinition"
        400:
          description: "Malformed querystring or model"
          schema:
            $ref: "#/definitions/BadRequestError"
        401:
          description: "Missing or invalid http-authentication"
        403:
          description: "Requested action is not allowed"
          schema:
            $ref: "#/definitions/ForbiddenError"
        404:
          description: "Object not found"
          schema:
            $ref: "#/definitions/NotFoundError"
        429:
          description: "Too many requests in a specified period"
          schema:
            $ref: "#/definitions/TooManyRequestsError"
      security:
      - basicAuth: []
securityDefinitions:
  basicAuth:
    description: "fill in your api username and password"
    type: "basic"
definitions:
  Account:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      cashJournalRelevant:
        type: "boolean"
      denominationInput:
        type: "boolean"
      exclusive:
        type: "boolean"
      name:
        type: "string"
      producer:
        $ref: "#/definitions/ModelReference"
      requiresSerialNumber:
        type: "boolean"
      revenueAccount:
        $ref: "#/definitions/ModelReference"
      type:
        type: "string"
        enum:
        - "DEPOSIT"
        - "WITHDRAWAL"
  ModelReference:
    type: "object"
    properties:
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx). recommanded\
          \ to use for linking purposes. will never change."
      name:
        type: "string"
        description: "name, like it is set in backoffice"
      number:
        type: "string"
        description: "number, like it is set in backoffice"
    description: "generic model for representation of id, number and name containing\
      \ model purposes"
  BadRequestError:
    type: "object"
    properties:
      message:
        type: "string"
        description: "a short description of the error in english"
      code:
        type: "string"
        description: "the code for client-side evaluation of the error"
        enum:
        - "BATCH_SIZE_OUT_OF_RANGE"
        - "DATE_NOT_EXISTS"
        - "INVALID_MODEL_PROPERTY"
        - "INVALID_QUERY_PARAMETER"
        - "MALFORMED_MODEL_ID_OR_DATE"
        - "MALFORMED_MODEL_ID_OR_NUMBER"
        - "MISSING_MODEL"
        - "MISSING_QUERY_PARAMETER"
        - "NUMBER_ALREADY_IN_USE"
        - "NUMBER_NOT_EXISTS"
        - "SUBMITTED_DATA_NOT_WELLFORMED"
  ForbiddenError:
    type: "object"
    properties:
      message:
        type: "string"
        description: "a short description of the error in english"
      code:
        type: "string"
        description: "the code for client-side evaluation of the error"
        enum:
        - "CLOUD_ACCOUNT_DISABLED"
        - "POINT_OF_SALE_NOT_EXTERNAL"
        - "POINT_OF_SALE_NOT_COUPLED"
        - "POINT_OF_SALE_COUPLED_WITH_OTHER_DEVICE"
        - "DELETE_NOT_ALLOWED"
        - "SAVE_OR_UPDATE_NOT_ALLOWED"
        - "ADDITIONAL_CLOUD_PACKAGE_REQUIRED"
        - "ADDITIONAL_API_ACCESS_REQUIRED"
  NotFoundError:
    type: "object"
    properties:
      message:
        type: "string"
        description: "a short description of the error in english"
      code:
        type: "string"
        description: "the code for client-side evaluation of the error"
        enum:
        - "ACCOUNT_NOT_FOUND"
        - "MODEL_ID_NOT_FOUND"
        - "NUMBER_NOT_FOUND"
        - "DATE_NOT_FOUND"
        - "INDEX_NOT_FOUND"
        - "CONDITION_MISMATCH"
  TooManyRequestsError:
    type: "object"
    properties:
      message:
        type: "string"
        description: "a short description of the error in english"
      code:
        type: "string"
        description: "the code for client-side evaluation of the error"
        enum:
        - "DAILY_LIMIT_EXCEEDED"
  ResultList:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          type: "object"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  ResultListAccount:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Account"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  AdditionalReceiptInfoType:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      cashierInputRequired:
        type: "boolean"
      customerGroups:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/ModelReference"
      description:
        type: "string"
      minItemQuantity:
        type: "number"
      minTotal:
        type: "number"
      name:
        type: "string"
      options:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      organizationalUnits:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/ModelReference"
      required:
        type: "boolean"
      tag:
        $ref: "#/definitions/ModelReference"
      validity:
        $ref: "#/definitions/Validity"
  DayTimePeriod:
    type: "object"
    properties:
      from:
        type: "string"
      to:
        type: "string"
  TotalPeriod:
    type: "object"
    properties:
      from:
        type: "string"
        format: "date-time"
      to:
        type: "string"
        format: "date-time"
  Validity:
    type: "object"
    properties:
      daily:
        $ref: "#/definitions/DayTimePeriod"
      daysOfMonth:
        type: "array"
        uniqueItems: true
        items:
          type: "integer"
          format: "int32"
      daysOfWeek:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "MONDAY"
          - "TUESDAY"
          - "WEDNESDAY"
          - "THURSDAY"
          - "FRIDAY"
          - "SATURDAY"
          - "SUNDAY"
      total:
        $ref: "#/definitions/TotalPeriod"
  ResultListAdditionalReceiptInfoType:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/AdditionalReceiptInfoType"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Assortment:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      costCenter:
        $ref: "#/definitions/ModelReference"
      description:
        type: "string"
      lastCleanUp:
        type: "string"
        format: "date-time"
      name:
        type: "string"
  ResultListAssortment:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Assortment"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Cashier:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      alias:
        type: "string"
      deactivated:
        type: "boolean"
      email:
        type: "string"
      firstname:
        type: "string"
      gender:
        type: "string"
        enum:
        - "MALE"
        - "FEMALE"
      loginCode:
        type: "string"
        description: "contains the md5 hash of the cashiers login code"
      loginPassword:
        type: "string"
        description: "contains the md5 hash of the cashiers login password"
      permissions:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "BLANK_RECEIPT"
          - "CANCEL_ITEM"
          - "CANCEL_LAST_RECEIPT_ITEM"
          - "CANCEL_RECEIPT"
          - "DELETE_RECEIPT"
          - "EXTERNAL_POINT_OF_SALE"
          - "FOREIGN_RECEIPT"
          - "MDE_ADMIN"
          - "PRICE"
          - "REPORTS"
          - "RETURN"
          - "REVISION"
          - "TERMINATE_BREAK_LOCK"
      role:
        type: "string"
      surname:
        type: "string"
  ResultListCashier:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Cashier"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  CommodityGroup:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      name:
        type: "string"
      parentCommodityGroup:
        readOnly: true
        $ref: "#/definitions/ModelReference"
  AddOrUpdateResult:
    type: "object"
    properties:
      action:
        type: "string"
        enum:
        - "ADDED"
        - "DELETED"
        - "QUEUED"
        - "UPDATED"
      href:
        type: "string"
      message:
        type: "string"
      number:
        type: "string"
      status:
        type: "string"
        enum:
        - "ERROR"
        - "OK"
      id:
        type: "string"
  ResultListCommodityGroup:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/CommodityGroup"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Currency:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      centName:
        type: "string"
      decimalPlaces:
        type: "integer"
        format: "int32"
      denominations:
        type: "array"
        items:
          $ref: "#/definitions/CurrencyDenomination"
      exchangeRates:
        type: "array"
        items:
          $ref: "#/definitions/CurrencyExchangeRate"
      key:
        type: "string"
      name:
        type: "string"
      systemCurrency:
        type: "boolean"
      symbol:
        type: "string"
  CurrencyDenomination:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "COIN"
        - "BANKNOTE"
      value:
        type: "number"
  CurrencyExchangeRate:
    type: "object"
    properties:
      factor:
        type: "number"
      validFrom:
        type: "string"
        format: "date-time"
  ResultListCurrency:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Currency"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  CustomerGroup:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      name:
        type: "string"
      priceGroup:
        $ref: "#/definitions/ModelReference"
  ResultListCustomerGroup:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/CustomerGroup"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  CustomerData:
    type: "object"
    properties:
      name:
        type: "string"
      phone:
        type: "string"
  CustomerOrder:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      bookingTime:
        type: "string"
        format: "date-time"
      cashier:
        $ref: "#/definitions/ModelReference"
      comment:
        type: "string"
      createTime:
        type: "string"
        format: "date-time"
      customer:
        $ref: "#/definitions/ModelReference"
      customerData:
        $ref: "#/definitions/CustomerData"
      deposit:
        type: "number"
      depositAccount:
        $ref: "#/definitions/ModelReference"
      finishTime:
        type: "string"
        format: "date-time"
      items:
        type: "array"
        items:
          $ref: "#/definitions/ReceiptItem"
      organizationalUnit:
        $ref: "#/definitions/ModelReference"
      pickUpTime:
        type: "string"
        format: "date-time"
      pointOfSale:
        $ref: "#/definitions/ModelReference"
      readyForPickUp:
        type: "boolean"
      warehouse:
        $ref: "#/definitions/ModelReference"
  ReceiptItem:
    type: "object"
    properties:
      bookingTime:
        type: "string"
        format: "date-time"
      commodityGroup:
        $ref: "#/definitions/ModelReference"
      indent:
        type: "integer"
        format: "int32"
      infoTexts:
        type: "array"
        items:
          type: "string"
      manualPrice:
        type: "boolean"
      product:
        $ref: "#/definitions/ModelReference"
      quantity:
        type: "number"
      sector:
        $ref: "#/definitions/ModelReference"
      total:
        $ref: "#/definitions/TotalPrice"
  TaxPayment:
    type: "object"
    properties:
      amount:
        type: "number"
      taxRate:
        type: "number"
      included:
        type: "boolean"
      salesTax:
        $ref: "#/definitions/ModelReference"
  TotalPrice:
    type: "object"
    required:
    - "base"
    - "taxPayments"
    properties:
      base:
        type: "number"
        example: 10.0
        description: "base price: price of the receipt or itemrow, excluded not included\
          \ taxes, included discount. example: 19% tax included, 2€ discount included"
      discount:
        type: "number"
        example: 2.0
        description: "discount: discount amount of the receipt or item row. base +\
          \ discount = undiscounted base price."
      gross:
        type: "number"
        example: 10.7
        description: "gross price: base + not includes taxes. example: 19% tax included,\
          \ 7% tax excluded"
      net:
        type: "number"
        example: 8.4
        description: "base price: price of the receipt or itemrow, excluded all taxes.\
          \ example: every taxes excluded"
      taxPayments:
        type: "array"
        description: "taxPayments: detailed tax information. could also be used to\
          \ calculate the gross and net price depending on the base price"
        items:
          $ref: "#/definitions/TaxPayment"
    description: "Contains all price-related information"
  ResultListCustomerOrder:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/CustomerOrder"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  AddressInformation:
    type: "object"
    properties:
      addressLine1:
        type: "string"
      addressLine2:
        type: "string"
      city:
        type: "string"
      country:
        type: "string"
      department:
        type: "string"
      state:
        type: "string"
      zipCode:
        type: "string"
  Customer:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      address:
        $ref: "#/definitions/AddressInformation"
      birthday:
        type: "string"
        format: "date-time"
      cards:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/CustomerCard"
      company:
        type: "string"
      customerGroup:
        $ref: "#/definitions/ModelReference"
      economicZone:
        $ref: "#/definitions/ModelReference"
      email:
        type: "string"
      firstname:
        type: "string"
      gender:
        type: "string"
        enum:
        - "MALE"
        - "FEMALE"
      informations:
        type: "array"
        items:
          $ref: "#/definitions/CustomerInformation"
      lastname:
        type: "string"
      phone:
        type: "string"
      taxId:
        type: "string"
      privacyPolicyAccepted:
        type: "boolean"
      marketingContactPermitted:
        type: "boolean"
  CustomerCard:
    type: "object"
    properties:
      number:
        type: "string"
      type:
        type: "string"
        enum:
        - "CREDIT"
        - "DEBIT"
        - "FRIENDSBONUS"
  CustomerInformation:
    type: "object"
    properties:
      creatorName:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      text:
        type: "string"
  ResultListCustomer:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Customer"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  EconomicZone:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      name:
        type: "string"
  ResultListEconomicZone:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/EconomicZone"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  EntryGate:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      hasChildren:
        type: "boolean"
      name:
        type: "string"
      parentEntryGate:
        $ref: "#/definitions/ModelReference"
  ResultListEntryGate:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/EntryGate"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Capacity:
    type: "object"
    properties:
      available:
        type: "integer"
        format: "int64"
      total:
        type: "integer"
        format: "int64"
  Category:
    type: "object"
    properties:
      name:
        type: "string"
      product:
        $ref: "#/definitions/ModelReference"
  Event:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      capacity:
        $ref: "#/definitions/Capacity"
      categories:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/Category"
      duration:
        $ref: "#/definitions/TimePeriod"
      location:
        type: "string"
      name:
        type: "string"
      start:
        type: "string"
        format: "date-time"
  TimePeriod:
    type: "object"
    properties:
      days:
        type: "integer"
        format: "int32"
      hours:
        type: "integer"
        format: "int32"
      minutes:
        type: "integer"
        format: "int32"
      months:
        type: "integer"
        format: "int32"
      seconds:
        type: "integer"
        format: "int32"
      weeks:
        type: "integer"
        format: "int32"
      years:
        type: "integer"
        format: "int32"
  ResultListEvent:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Event"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  InfoText:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      text:
        type: "string"
      type:
        type: "string"
        enum:
        - "ITEM"
        - "POPUP"
        - "RECEIPT"
  ResultListInfoText:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/InfoText"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  InventoryList:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      bookingTime:
        type: "string"
        format: "date-time"
        readOnly: true
      bookingUser:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      cashier:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      createTime:
        type: "string"
        format: "date-time"
        readOnly: true
      description:
        type: "string"
      finishTime:
        type: "string"
        format: "date-time"
        readOnly: true
      inventory:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      modifiedTime:
        type: "string"
        format: "date-time"
        readOnly: true
      organizationalUnit:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      pointOfSale:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      status:
        type: "string"
        readOnly: true
        enum:
        - "BOOKED"
        - "IN_PROGRESS"
  ResultListInventoryList:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/InventoryList"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  MethodNotAllowedError:
    type: "object"
    properties:
      message:
        type: "string"
        description: "a short description of the error in english"
      code:
        type: "string"
        description: "the code for client-side evaluation of the error"
        enum:
        - "NOT_PERMITTED"
  Inventory:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      automaticBooking:
        type: "boolean"
      automaticBookingAfterDays:
        type: "integer"
        format: "int32"
        description: "only if isAutomaticBooking=true"
      checkProductAssortmentValidity:
        type: "boolean"
      checkProductListing:
        type: "boolean"
      createTime:
        type: "string"
        format: "date-time"
      description:
        type: "string"
      executionDays:
        type: "array"
        description: "only if type=PERPETUAL_INVENTORY"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "MONDAY"
          - "TUESDAY"
          - "WEDNESDAY"
          - "THURSDAY"
          - "FRIDAY"
          - "SATURDAY"
          - "SUNDAY"
      executionTime:
        type: "string"
        format: "date-time"
      hasBookedReceipts:
        type: "boolean"
      maxProductsPerList:
        type: "integer"
        format: "int32"
        description: "only if type=ANNUAL_INVENTORY | INVENTORY_IRREGULARITY"
      oneCommodityGroupPerInventoryList:
        type: "boolean"
        description: "only if type=ANNUAL_INVENTORY | INVENTORY_IRREGULARITY"
      onlyNegativeProductStocks:
        type: "boolean"
        description: "only if type=INVENTORY_IRREGULARITY"
      organizationalUnits:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/ModelReference"
      productFilter:
        type: "string"
        enum:
        - "ACTIVE"
        - "ALL"
        - "DEACTIVATED"
      type:
        type: "string"
        enum:
        - "ANNUAL_INVENTORY"
        - "INVENTORY_IRREGULARITY"
        - "INVENTORY_SAMPLING"
        - "PERPETUAL_INVENTORY"
  InventoryListItem:
    type: "object"
    properties:
      averagePurchasePrice:
        type: "number"
      index:
        type: "integer"
        format: "int32"
      product:
        $ref: "#/definitions/ModelReference"
      revision:
        type: "integer"
        format: "int64"
        readOnly: true
      stock:
        $ref: "#/definitions/InventoryListItemStock"
      stockDifferenceReason:
        type: "string"
  InventoryListItemStock:
    type: "object"
    properties:
      actual:
        type: "number"
      nominal:
        type: "number"
  ResultListInventory:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Inventory"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  ResultListInventoryListItem:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/InventoryListItem"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  CloudSubscription:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
        - "ACTIVE"
        - "FREE"
        - "INACTIVE"
      validTo:
        type: "string"
        format: "date-time"
  CompanyIdentification:
    type: "object"
    properties:
      gln:
        type: "string"
      taxId:
        type: "string"
  KoronaAccount:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      activePackages:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "INVOICING"
          - "FOOD"
          - "PLUS"
          - "RETAIL"
          - "SUPPORT"
          - "POS"
          - "TICKET"
          - "FRANCHISE"
      address:
        $ref: "#/definitions/AddressInformation"
      cloudSubscription:
        $ref: "#/definitions/CloudSubscription"
      company:
        type: "string"
      identification:
        $ref: "#/definitions/CompanyIdentification"
      testMode:
        type: "boolean"
  OrganizationalUnit:
    type: "object"
    required:
    - "name"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      address:
        $ref: "#/definitions/AddressInformation"
      economicZone:
        $ref: "#/definitions/ModelReference"
      name:
        type: "string"
      parentOrganizationalUnit:
        $ref: "#/definitions/ModelReference"
      priceGroup:
        $ref: "#/definitions/ModelReference"
      warehouse:
        type: "boolean"
  ResultListOrganizationalUnit:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/OrganizationalUnit"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  DayRating:
    type: "object"
    properties:
      cashier:
        $ref: "#/definitions/ModelReference"
      comment:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      id:
        type: "string"
        readOnly: true
      organizationalUnit:
        $ref: "#/definitions/ModelReference"
      rating:
        $ref: "#/definitions/Rating"
      receipts:
        type: "integer"
        format: "int64"
      revenue:
        type: "number"
      visitors:
        type: "integer"
        format: "int64"
      weather:
        $ref: "#/definitions/Weather"
  Rating:
    type: "object"
    properties:
      assortment:
        type: "integer"
        format: "int32"
      customers:
        type: "integer"
        format: "int32"
      employees:
        type: "integer"
        format: "int32"
  Weather:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      temperature:
        type: "integer"
        format: "int32"
      temperatureUnit:
        type: "string"
        enum:
        - "CELSIUS"
        - "FAHRENHEIT"
        - "KELVIN"
  ResultListDayRating:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/DayRating"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Amount:
    type: "object"
    properties:
      actual:
        type: "number"
      lent:
        type: "number"
      maxLevel:
        type: "number"
      ordered:
        type: "number"
      reorderLevel:
        type: "number"
  ProductStock:
    type: "object"
    properties:
      amount:
        $ref: "#/definitions/Amount"
      averagePurchasePrice:
        type: "number"
      product:
        $ref: "#/definitions/ModelReference"
      revision:
        type: "integer"
        format: "int64"
        readOnly: true
      warehouse:
        $ref: "#/definitions/ModelReference"
  ResultListProductStock:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/ProductStock"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  ProductTransferInvolvedPartyInformation:
    type: "object"
    properties:
      buyer:
        $ref: "#/definitions/ProductTransferInvolvedPartyInformationData"
      deliveryAddress:
        $ref: "#/definitions/ProductTransferInvolvedPartyInformationData"
      finalRecipient:
        $ref: "#/definitions/ProductTransferInvolvedPartyInformationData"
      invoiceRecipient:
        $ref: "#/definitions/ProductTransferInvolvedPartyInformationData"
      supplier:
        $ref: "#/definitions/ProductTransferInvolvedPartyInformationData"
      transportServiceProvider:
        $ref: "#/definitions/ProductTransferInvolvedPartyInformationData"
  ProductTransferInvolvedPartyInformationData:
    type: "object"
    properties:
      address:
        $ref: "#/definitions/AddressInformation"
      company:
        type: "string"
      identification:
        $ref: "#/definitions/CompanyIdentification"
  ResultListStockReceipt:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/StockReceipt"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  StockReceipt:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      arrivalDate:
        type: "string"
        format: "date-time"
      bookingTime:
        type: "string"
        format: "date-time"
      bookingUser:
        $ref: "#/definitions/ModelReference"
      cashier:
        $ref: "#/definitions/ModelReference"
      createTime:
        type: "string"
        format: "date-time"
      createUser:
        $ref: "#/definitions/ModelReference"
      customer:
        $ref: "#/definitions/ModelReference"
      description:
        type: "string"
      dispatchNotification:
        $ref: "#/definitions/ModelReference"
      itemsCount:
        type: "integer"
        format: "int32"
      organizationalUnit:
        $ref: "#/definitions/ModelReference"
      partyInformation:
        $ref: "#/definitions/ProductTransferInvolvedPartyInformation"
      pointOfSale:
        $ref: "#/definitions/ModelReference"
      productStockOrder:
        $ref: "#/definitions/ModelReference"
      sourceOrganizationalUnit:
        $ref: "#/definitions/ModelReference"
      supplier:
        $ref: "#/definitions/ModelReference"
      status:
        type: "string"
        readOnly: true
        enum:
        - "BOOKED"
        - "IN_PROGRESS"
  PaymentMethod:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      allowedBalanceDifference:
        type: "number"
      currency:
        $ref: "#/definitions/ModelReference"
      forceCustomerNumber:
        type: "boolean"
      forcePrint:
        type: "boolean"
      name:
        type: "string"
      printCopies:
        type: "integer"
        format: "int32"
  ResultListPaymentMethod:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/PaymentMethod"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  DeviceInformation:
    type: "object"
    properties:
      appVersion:
        type: "string"
        example: "1.0"
      operatingSystem:
        type: "string"
        example: "iOS 11.1"
  Pos:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      coupled:
        type: "boolean"
        readOnly: true
      couplingId:
        type: "string"
      defaultCustomerGroup:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      defaultPaymentMethod:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      deviceInformation:
        $ref: "#/definitions/DeviceInformation"
      external:
        type: "boolean"
        readOnly: true
      lastReceiptNumber:
        type: "string"
        readOnly: true
      lastZCount:
        type: "integer"
        format: "int64"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      organizationalUnit:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      printFooterLines:
        type: "object"
        readOnly: true
        additionalProperties:
          type: "string"
      printHeaderLines:
        type: "object"
        readOnly: true
        additionalProperties:
          type: "string"
      receiptInfoTexts:
        type: "array"
        readOnly: true
        items:
          $ref: "#/definitions/ModelReference"
      useAlternativeSector:
        type: "boolean"
  AccountTransaction:
    type: "object"
    properties:
      account:
        $ref: "#/definitions/ModelReference"
      amount:
        type: "number"
      bookingTime:
        type: "string"
        format: "date-time"
      description:
        type: "string"
  AdditionalInfo:
    type: "object"
    properties:
      text:
        type: "string"
      type:
        $ref: "#/definitions/ModelReference"
  GeoLocation:
    type: "object"
    properties:
      latitude:
        type: "number"
      longitude:
        type: "number"
  Payment:
    type: "object"
    properties:
      amount:
        type: "number"
      currency:
        $ref: "#/definitions/ModelReference"
      paymentMethod:
        $ref: "#/definitions/ModelReference"
      transactionTime:
        type: "string"
        format: "date-time"
      transactionToken:
        type: "string"
  Receipt:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      accountTransactions:
        type: "array"
        items:
          $ref: "#/definitions/AccountTransaction"
      additionalInfo:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/AdditionalInfo"
      bookingTime:
        type: "string"
        format: "date-time"
      cashier:
        $ref: "#/definitions/ModelReference"
      creationTime:
        type: "string"
        format: "date-time"
      currency:
        $ref: "#/definitions/ModelReference"
      customer:
        $ref: "#/definitions/ModelReference"
      customerGroup:
        $ref: "#/definitions/ModelReference"
      customerOrder:
        $ref: "#/definitions/ModelReference"
      depositAmount:
        type: "number"
      geoLocation:
        $ref: "#/definitions/GeoLocation"
      items:
        type: "array"
        items:
          $ref: "#/definitions/ReceiptItem"
      organizationalUnit:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      payments:
        type: "array"
        items:
          $ref: "#/definitions/Payment"
      pointOfSale:
        readOnly: true
        $ref: "#/definitions/ModelReference"
      priceGroup:
        $ref: "#/definitions/ModelReference"
      voided:
        type: "boolean"
      zcounter:
        type: "integer"
        format: "int64"
  AccountSummary:
    type: "object"
    properties:
      account:
        $ref: "#/definitions/ModelReference"
      amount:
        type: "number"
      transactions:
        type: "number"
  AmountCountData:
    type: "object"
    properties:
      amount:
        type: "number"
      count:
        type: "number"
  CashierSummary:
    type: "object"
    properties:
      cancelledItems:
        $ref: "#/definitions/AmountCountData"
      cancelledReceipts:
        $ref: "#/definitions/AmountCountData"
      cashier:
        $ref: "#/definitions/ModelReference"
      receipts:
        $ref: "#/definitions/AmountCountData"
      returns:
        $ref: "#/definitions/AmountCountData"
      voidedReceipts:
        $ref: "#/definitions/AmountCountData"
  CommodityGroupSummary:
    type: "object"
    properties:
      commodityGroup:
        $ref: "#/definitions/ModelReference"
      discountAmount:
        type: "number"
      items:
        type: "number"
      revenue:
        type: "number"
  CustomerGroupSummary:
    type: "object"
    properties:
      customerGroup:
        $ref: "#/definitions/ModelReference"
      discountAmount:
        type: "number"
      items:
        type: "number"
      revenue:
        type: "number"
  EndOfDayStatement:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      finishTime:
        type: "string"
        format: "date-time"
      receiptCount:
        type: "integer"
        format: "int64"
      successfullyChecked:
        type: "boolean"
      summaries:
        $ref: "#/definitions/EndOfDayStatementSummary"
      getzCount:
        type: "integer"
        format: "int64"
  EndOfDayStatementSummary:
    type: "object"
    properties:
      accounts:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/AccountSummary"
      cashiers:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/CashierSummary"
      commodityGroups:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/CommodityGroupSummary"
      customerGroups:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/CustomerGroupSummary"
      payments:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/PaymentSummary"
      taxes:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/TaxSummary"
  PaymentSummary:
    type: "object"
    properties:
      actualAmount:
        type: "number"
      expectedAmount:
        type: "number"
      paymentMethod:
        $ref: "#/definitions/ModelReference"
  ResultListEndOfDayStatement:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/EndOfDayStatement"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  TaxSummary:
    type: "object"
    properties:
      netAmount:
        type: "number"
      salesTax:
        $ref: "#/definitions/ModelReference"
      taxAmount:
        type: "number"
  ResultListReceipt:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Receipt"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  ResultListPos:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Pos"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  PriceGroup:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      currency:
        $ref: "#/definitions/ModelReference"
      name:
        type: "string"
      netPrices:
        type: "boolean"
  ResultListPriceGroup:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/PriceGroup"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Product:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      alternativeSector:
        $ref: "#/definitions/ModelReference"
      assortment:
        $ref: "#/definitions/ModelReference"
      codes:
        type: "array"
        items:
          $ref: "#/definitions/ProductCode"
      commodityGroup:
        $ref: "#/definitions/ModelReference"
      conversion:
        type: "boolean"
      costs:
        type: "number"
      deactivated:
        type: "boolean"
      deposit:
        type: "boolean"
      descriptions:
        type: "array"
        items:
          $ref: "#/definitions/ProductDescription"
      discountable:
        type: "boolean"
      image:
        $ref: "#/definitions/ModelReference"
      infoTexts:
        type: "array"
        items:
          $ref: "#/definitions/ModelReference"
      itemSequence:
        $ref: "#/definitions/ModelReference"
      lastPurchasePrice:
        type: "number"
      listed:
        type: "boolean"
      listedSince:
        type: "string"
        format: "date-time"
      maxPrice:
        type: "number"
      minPrice:
        type: "number"
      name:
        type: "string"
      packagingQuantity:
        type: "number"
      packagingRequired:
        type: "boolean"
      packagingUnit:
        type: "string"
        enum:
        - "CUBIC_INCH"
        - "CUBIC_METER"
        - "FLUID_OUNCE"
        - "GALLON_FL"
        - "GRAM"
        - "INCH"
        - "KILOGRAM"
        - "LITER"
        - "METER"
        - "MILLILITER"
        - "OUNCE"
        - "POUND"
        - "SQUARE_INCH"
        - "SQUARE_METER"
      personalizationRequired:
        type: "boolean"
      priceChangable:
        type: "boolean"
      prices:
        type: "array"
        items:
          $ref: "#/definitions/ProductPrice"
      printTicketsSeparately:
        type: "boolean"
      productionType:
        $ref: "#/definitions/ModelReference"
      recommendedRetailPrice:
        type: "number"
      relatedProducts:
        $ref: "#/definitions/ModelReference"
      sector:
        $ref: "#/definitions/ModelReference"
      serialNumberRequired:
        type: "boolean"
      subproductPresentation:
        type: "string"
        enum:
        - "DEFAULT"
        - "HIDE_ALL"
        - "HIDE_PRICES"
        - "HIDE_QUANTITIES"
      subproducts:
        type: "array"
        items:
          $ref: "#/definitions/ProductSubproduct"
      supplierPrices:
        type: "array"
        items:
          $ref: "#/definitions/ProductSupplierPrice"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/ModelReference"
      ticketDefinition:
        $ref: "#/definitions/ModelReference"
      trackInventory:
        type: "boolean"
      stockReturnUnsellable:
        type: "boolean"
  ProductCode:
    type: "object"
    properties:
      productCode:
        type: "string"
      containerSize:
        type: "number"
  ProductDescription:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "ALLERGENS"
        - "MANUAL"
        - "DESCRIPTION"
        - "ORDER_TEXT"
        - "RECEIPT_TEXT"
        - "INGREDIENTS"
        - "NUTRITIONAL_VALUE"
        - "CARE_INSTRUCTIONS"
        - "RECIPE"
        - "CERTIFICATE"
        - "WARRANTY_TEXT"
        - "INFO_URL"
        - "ADDITIVES"
        - "LABEL_TEXT"
      text:
        type: "string"
  ProductPrice:
    type: "object"
    properties:
      value:
        type: "number"
      validFrom:
        type: "string"
        format: "date-time"
      productCode:
        type: "string"
      priceGroup:
        $ref: "#/definitions/ModelReference"
      organizationalUnit:
        $ref: "#/definitions/ModelReference"
  ProductSubproduct:
    type: "object"
    properties:
      prices:
        type: "array"
        items:
          $ref: "#/definitions/ProductPrice"
      product:
        $ref: "#/definitions/ModelReference"
      quantity:
        type: "number"
  ProductSupplierPrice:
    type: "object"
    properties:
      supplier:
        $ref: "#/definitions/ModelReference"
      orderCode:
        type: "string"
      value:
        type: "number"
      containerSize:
        type: "number"
      description:
        type: "string"
  ResultListProduct:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Product"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  SalesTax:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      economicZone:
        $ref: "#/definitions/ModelReference"
      included:
        type: "boolean"
      name:
        type: "string"
      rates:
        type: "array"
        items:
          $ref: "#/definitions/SalesTaxRate"
  SalesTaxRate:
    type: "object"
    properties:
      rate:
        type: "number"
      validFrom:
        type: "string"
        format: "date-time"
  ResultListSalesTax:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/SalesTax"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Sector:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      name:
        type: "string"
      salesTaxes:
        type: "array"
        items:
          $ref: "#/definitions/SectorSalesTaxItem"
  SectorSalesTaxItem:
    type: "object"
    properties:
      index:
        type: "integer"
        format: "int32"
      salesTax:
        $ref: "#/definitions/ModelReference"
  ResultListSector:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Sector"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Period:
    type: "object"
    properties:
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      results:
        type: "object"
  PeriodObject:
    type: "object"
    properties:
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      results:
        type: "object"
  PeriodRevenueData:
    type: "object"
    properties:
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      results:
        $ref: "#/definitions/RevenueData"
  RevenueData:
    type: "object"
    properties:
      netValue:
        type: "number"
      grossValue:
        type: "number"
      averageNetValue:
        type: "number"
      averageGrossValue:
        type: "number"
      customersTotal:
        type: "integer"
        format: "int64"
  Statistic:
    type: "object"
    properties:
      organizationalUnit:
        $ref: "#/definitions/ModelReference"
      currentPeriod:
        $ref: "#/definitions/PeriodObject"
      previousPeriod:
        $ref: "#/definitions/PeriodObject"
  StatisticRevenueData:
    type: "object"
    properties:
      organizationalUnit:
        $ref: "#/definitions/ModelReference"
      currentPeriod:
        $ref: "#/definitions/PeriodRevenueData"
      previousPeriod:
        $ref: "#/definitions/PeriodRevenueData"
  PeriodListTopSeller:
    type: "object"
    properties:
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      results:
        type: "array"
        items:
          $ref: "#/definitions/TopSeller"
  StatisticListTopSeller:
    type: "object"
    properties:
      organizationalUnit:
        $ref: "#/definitions/ModelReference"
      currentPeriod:
        $ref: "#/definitions/PeriodListTopSeller"
      previousPeriod:
        $ref: "#/definitions/PeriodListTopSeller"
  TopSeller:
    type: "object"
    properties:
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx). recommanded\
          \ to use for linking purposes. will never change."
      name:
        type: "string"
        description: "name, like it is set in backoffice"
      number:
        type: "string"
        description: "number, like it is set in backoffice"
      grossAmount:
        type: "number"
      quantity:
        type: "number"
  PeriodMapStringRevenueData:
    type: "object"
    properties:
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      results:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/RevenueData"
  StatisticMapStringRevenueData:
    type: "object"
    properties:
      organizationalUnit:
        $ref: "#/definitions/ModelReference"
      currentPeriod:
        $ref: "#/definitions/PeriodMapStringRevenueData"
      previousPeriod:
        $ref: "#/definitions/PeriodMapStringRevenueData"
  StockReceiptItem:
    type: "object"
    properties:
      amount:
        $ref: "#/definitions/StockReceiptItemAmount"
      identification:
        $ref: "#/definitions/StockReceiptItemIdentification"
      index:
        type: "integer"
        format: "int32"
        readOnly: true
      product:
        $ref: "#/definitions/ModelReference"
      purchasePrice:
        $ref: "#/definitions/StockReceiptItemPurchasePrice"
      revision:
        type: "integer"
        format: "int64"
        readOnly: true
      shelfLife:
        type: "string"
        format: "date-time"
  StockReceiptItemAmount:
    type: "object"
    properties:
      expected:
        type: "number"
        readOnly: true
      received:
        type: "number"
  StockReceiptItemIdentification:
    type: "object"
    properties:
      buyer:
        type: "string"
      productCode:
        type: "string"
      supplier:
        type: "string"
  StockReceiptItemPurchasePrice:
    type: "object"
    properties:
      actual:
        type: "number"
      old:
        type: "number"
  ResultListStockReceiptItem:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/StockReceiptItem"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Supplier:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      additionalInformation:
        type: "string"
      address:
        $ref: "#/definitions/ProductTransferInvolvedPartyInformationData"
      contact:
        $ref: "#/definitions/SupplierContact"
      contactPerson:
        $ref: "#/definitions/SupplierContactPerson"
      customerNumber:
        type: "string"
      name:
        type: "string"
      payment:
        $ref: "#/definitions/SupplierPaymentInformation"
      returnAddress:
        $ref: "#/definitions/ProductTransferInvolvedPartyInformationData"
  SupplierContact:
    type: "object"
    properties:
      email:
        type: "string"
      fax:
        type: "string"
      phone:
        type: "string"
      website:
        type: "string"
  SupplierContactPerson:
    type: "object"
    properties:
      email:
        type: "string"
      fax:
        type: "string"
      firstname:
        type: "string"
      mobile:
        type: "string"
      phone:
        type: "string"
      salutation:
        type: "string"
      surname:
        type: "string"
  SupplierPaymentInformation:
    type: "object"
    properties:
      accountNumber:
        type: "string"
      bank:
        type: "string"
      bankNumber:
        type: "string"
      bic:
        type: "string"
      creditorIdentifier:
        type: "string"
      currency:
        $ref: "#/definitions/ModelReference"
      iban:
        type: "string"
      paymentMethod:
        type: "string"
        enum:
        - "INVOICE"
        - "PREPAYMENT"
        - "CASH_ON_DELIVERY"
        - "DIRECT_DEBIT"
      minimumOrderValue:
        type: "number"
  ResultListSupplier:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Supplier"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  ResultListTag:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/Tag"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  Tag:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      name:
        type: "string"
  Admission:
    type: "object"
    properties:
      daily:
        type: "integer"
        format: "int32"
      total:
        type: "integer"
        format: "int32"
  Interval:
    type: "object"
    properties:
      from:
        type: "string"
        format: "date-time"
      to:
        type: "string"
        format: "date-time"
  ResultListTicketDefinition:
    type: "object"
    required:
    - "currentPage"
    - "links"
    - "pagesTotal"
    - "results"
    - "resultsOfPage"
    - "resultsTotal"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
        description: "number of the current page, starting from 1"
      links:
        type: "object"
        description: "navigation links (previous, self, next)"
        additionalProperties:
          type: "string"
      pagesTotal:
        type: "integer"
        format: "int32"
        description: "pages count total"
      results:
        type: "array"
        description: "result list"
        items:
          $ref: "#/definitions/TicketDefinition"
      resultsOfPage:
        type: "integer"
        format: "int32"
        description: "result count of the current page"
      resultsTotal:
        type: "integer"
        format: "int32"
        description: "result count total"
  TicketDefinition:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "indicates whether the object is active for use or not"
        readOnly: true
      id:
        type: "string"
        description: "global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
        readOnly: true
      number:
        type: "string"
        description: "number of the object, like it is set in backoffice; will be\
          \ removed when active=false"
      revision:
        type: "integer"
        format: "int64"
        description: "the revision number of the object. revision numbers are unique\
          \ per object-type. there is is no object of the same type with identical\
          \ revision numbers."
        readOnly: true
      activationDelayAfterPurchase:
        $ref: "#/definitions/TimePeriod"
      entryGates:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/ModelReference"
      name:
        type: "string"
      possibleAdmissions:
        $ref: "#/definitions/Admission"
      validityPeriodAfterActivation:
        $ref: "#/definitions/TimePeriod"
      validityPeriodAfterEntrance:
        $ref: "#/definitions/TimePeriod"
      validityPeriodDaily:
        $ref: "#/definitions/Interval"
      validityPeriodTotal:
        $ref: "#/definitions/Interval"
