/**
 * KORONA.cloud API v3
 * Our api provides access to our cloud services
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CurrencyDenomination', 'model/CurrencyExchangeRate'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CurrencyDenomination'), require('./CurrencyExchangeRate'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudApiV3JsClient) {
      root.CloudApiV3JsClient = {};
    }
    root.CloudApiV3JsClient.Currency = factory(root.CloudApiV3JsClient.ApiClient, root.CloudApiV3JsClient.CurrencyDenomination, root.CloudApiV3JsClient.CurrencyExchangeRate);
  }
}(this, function(ApiClient, CurrencyDenomination, CurrencyExchangeRate) {
  'use strict';




  /**
   * The Currency model module.
   * @module model/Currency
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>Currency</code>.
   * @alias module:model/Currency
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>Currency</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Currency} obj Optional instance to populate.
   * @return {module:model/Currency} The populated <code>Currency</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('number')) {
        obj['number'] = ApiClient.convertToType(data['number'], 'String');
      }
      if (data.hasOwnProperty('revision')) {
        obj['revision'] = ApiClient.convertToType(data['revision'], 'Number');
      }
      if (data.hasOwnProperty('centName')) {
        obj['centName'] = ApiClient.convertToType(data['centName'], 'String');
      }
      if (data.hasOwnProperty('decimalPlaces')) {
        obj['decimalPlaces'] = ApiClient.convertToType(data['decimalPlaces'], 'Number');
      }
      if (data.hasOwnProperty('denominations')) {
        obj['denominations'] = ApiClient.convertToType(data['denominations'], [CurrencyDenomination]);
      }
      if (data.hasOwnProperty('exchangeRates')) {
        obj['exchangeRates'] = ApiClient.convertToType(data['exchangeRates'], [CurrencyExchangeRate]);
      }
      if (data.hasOwnProperty('key')) {
        obj['key'] = ApiClient.convertToType(data['key'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('systemCurrency')) {
        obj['systemCurrency'] = ApiClient.convertToType(data['systemCurrency'], 'Boolean');
      }
      if (data.hasOwnProperty('symbol')) {
        obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
      }
    }
    return obj;
  }

  /**
   * indicates whether the object is active for use or not
   * @member {Boolean} active
   */
  exports.prototype['active'] = undefined;
  /**
   * global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * number of the object, like it is set in backoffice; will be removed when active=false
   * @member {String} number
   */
  exports.prototype['number'] = undefined;
  /**
   * the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
   * @member {Number} revision
   */
  exports.prototype['revision'] = undefined;
  /**
   * @member {String} centName
   */
  exports.prototype['centName'] = undefined;
  /**
   * @member {Number} decimalPlaces
   */
  exports.prototype['decimalPlaces'] = undefined;
  /**
   * @member {Array.<module:model/CurrencyDenomination>} denominations
   */
  exports.prototype['denominations'] = undefined;
  /**
   * @member {Array.<module:model/CurrencyExchangeRate>} exchangeRates
   */
  exports.prototype['exchangeRates'] = undefined;
  /**
   * @member {String} key
   */
  exports.prototype['key'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Boolean} systemCurrency
   */
  exports.prototype['systemCurrency'] = undefined;
  /**
   * @member {String} symbol
   */
  exports.prototype['symbol'] = undefined;



  return exports;
}));


