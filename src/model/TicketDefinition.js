/**
 * KORONA.cloud API v3
 * Our api provides access to our cloud services
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Admission', 'model/Interval', 'model/ModelReference', 'model/TimePeriod'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Admission'), require('./Interval'), require('./ModelReference'), require('./TimePeriod'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudApiV3JsClient) {
      root.CloudApiV3JsClient = {};
    }
    root.CloudApiV3JsClient.TicketDefinition = factory(root.CloudApiV3JsClient.ApiClient, root.CloudApiV3JsClient.Admission, root.CloudApiV3JsClient.Interval, root.CloudApiV3JsClient.ModelReference, root.CloudApiV3JsClient.TimePeriod);
  }
}(this, function(ApiClient, Admission, Interval, ModelReference, TimePeriod) {
  'use strict';




  /**
   * The TicketDefinition model module.
   * @module model/TicketDefinition
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>TicketDefinition</code>.
   * @alias module:model/TicketDefinition
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>TicketDefinition</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TicketDefinition} obj Optional instance to populate.
   * @return {module:model/TicketDefinition} The populated <code>TicketDefinition</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('number')) {
        obj['number'] = ApiClient.convertToType(data['number'], 'String');
      }
      if (data.hasOwnProperty('revision')) {
        obj['revision'] = ApiClient.convertToType(data['revision'], 'Number');
      }
      if (data.hasOwnProperty('activationDelayAfterPurchase')) {
        obj['activationDelayAfterPurchase'] = TimePeriod.constructFromObject(data['activationDelayAfterPurchase']);
      }
      if (data.hasOwnProperty('entryGates')) {
        obj['entryGates'] = ApiClient.convertToType(data['entryGates'], [ModelReference]);
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('possibleAdmissions')) {
        obj['possibleAdmissions'] = Admission.constructFromObject(data['possibleAdmissions']);
      }
      if (data.hasOwnProperty('validityPeriodAfterActivation')) {
        obj['validityPeriodAfterActivation'] = TimePeriod.constructFromObject(data['validityPeriodAfterActivation']);
      }
      if (data.hasOwnProperty('validityPeriodAfterEntrance')) {
        obj['validityPeriodAfterEntrance'] = TimePeriod.constructFromObject(data['validityPeriodAfterEntrance']);
      }
      if (data.hasOwnProperty('validityPeriodDaily')) {
        obj['validityPeriodDaily'] = Interval.constructFromObject(data['validityPeriodDaily']);
      }
      if (data.hasOwnProperty('validityPeriodTotal')) {
        obj['validityPeriodTotal'] = Interval.constructFromObject(data['validityPeriodTotal']);
      }
    }
    return obj;
  }

  /**
   * indicates whether the object is active for use or not
   * @member {Boolean} active
   */
  exports.prototype['active'] = undefined;
  /**
   * global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * number of the object, like it is set in backoffice; will be removed when active=false
   * @member {String} number
   */
  exports.prototype['number'] = undefined;
  /**
   * the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
   * @member {Number} revision
   */
  exports.prototype['revision'] = undefined;
  /**
   * @member {module:model/TimePeriod} activationDelayAfterPurchase
   */
  exports.prototype['activationDelayAfterPurchase'] = undefined;
  /**
   * @member {Array.<module:model/ModelReference>} entryGates
   */
  exports.prototype['entryGates'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {module:model/Admission} possibleAdmissions
   */
  exports.prototype['possibleAdmissions'] = undefined;
  /**
   * @member {module:model/TimePeriod} validityPeriodAfterActivation
   */
  exports.prototype['validityPeriodAfterActivation'] = undefined;
  /**
   * @member {module:model/TimePeriod} validityPeriodAfterEntrance
   */
  exports.prototype['validityPeriodAfterEntrance'] = undefined;
  /**
   * @member {module:model/Interval} validityPeriodDaily
   */
  exports.prototype['validityPeriodDaily'] = undefined;
  /**
   * @member {module:model/Interval} validityPeriodTotal
   */
  exports.prototype['validityPeriodTotal'] = undefined;



  return exports;
}));


