/**
 * KORONA.cloud API v3
 * Our api provides access to our cloud services
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AddressInformation', 'model/CloudSubscription', 'model/CompanyIdentification'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AddressInformation'), require('./CloudSubscription'), require('./CompanyIdentification'));
  } else {
    // Browser globals (root is window)
    if (!root.KoronacloudApiV3) {
      root.KoronacloudApiV3 = {};
    }
    root.KoronacloudApiV3.KoronaAccount = factory(root.KoronacloudApiV3.ApiClient, root.KoronacloudApiV3.AddressInformation, root.KoronacloudApiV3.CloudSubscription, root.KoronacloudApiV3.CompanyIdentification);
  }
}(this, function(ApiClient, AddressInformation, CloudSubscription, CompanyIdentification) {
  'use strict';




  /**
   * The KoronaAccount model module.
   * @module model/KoronaAccount
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>KoronaAccount</code>.
   * @alias module:model/KoronaAccount
   * @class
   */
  var exports = function() {
    var _this = this;











  };

  /**
   * Constructs a <code>KoronaAccount</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/KoronaAccount} obj Optional instance to populate.
   * @return {module:model/KoronaAccount} The populated <code>KoronaAccount</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('number')) {
        obj['number'] = ApiClient.convertToType(data['number'], 'String');
      }
      if (data.hasOwnProperty('revision')) {
        obj['revision'] = ApiClient.convertToType(data['revision'], 'Number');
      }
      if (data.hasOwnProperty('activePackages')) {
        obj['activePackages'] = ApiClient.convertToType(data['activePackages'], ['String']);
      }
      if (data.hasOwnProperty('address')) {
        obj['address'] = AddressInformation.constructFromObject(data['address']);
      }
      if (data.hasOwnProperty('cloudSubscription')) {
        obj['cloudSubscription'] = CloudSubscription.constructFromObject(data['cloudSubscription']);
      }
      if (data.hasOwnProperty('company')) {
        obj['company'] = ApiClient.convertToType(data['company'], 'String');
      }
      if (data.hasOwnProperty('identification')) {
        obj['identification'] = CompanyIdentification.constructFromObject(data['identification']);
      }
      if (data.hasOwnProperty('testMode')) {
        obj['testMode'] = ApiClient.convertToType(data['testMode'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * indicates whether the object is active for use or not
   * @member {Boolean} active
   */
  exports.prototype['active'] = undefined;
  /**
   * global object uuid (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * number of the object, like it is set in backoffice; will be removed when active=false
   * @member {String} number
   */
  exports.prototype['number'] = undefined;
  /**
   * the revision number of the object. revision numbers are unique per object-type. there is is no object of the same type with identical revision numbers.
   * @member {Number} revision
   */
  exports.prototype['revision'] = undefined;
  /**
   * @member {Array.<module:model/KoronaAccount.ActivePackagesEnum>} activePackages
   */
  exports.prototype['activePackages'] = undefined;
  /**
   * @member {module:model/AddressInformation} address
   */
  exports.prototype['address'] = undefined;
  /**
   * @member {module:model/CloudSubscription} cloudSubscription
   */
  exports.prototype['cloudSubscription'] = undefined;
  /**
   * @member {String} company
   */
  exports.prototype['company'] = undefined;
  /**
   * @member {module:model/CompanyIdentification} identification
   */
  exports.prototype['identification'] = undefined;
  /**
   * @member {Boolean} testMode
   */
  exports.prototype['testMode'] = undefined;


  /**
   * Allowed values for the <code>activePackages</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ActivePackagesEnum = {
    /**
     * value: "INVOICING"
     * @const
     */
    "INVOICING": "INVOICING",
    /**
     * value: "FOOD"
     * @const
     */
    "FOOD": "FOOD",
    /**
     * value: "PLUS"
     * @const
     */
    "PLUS": "PLUS",
    /**
     * value: "RETAIL"
     * @const
     */
    "RETAIL": "RETAIL",
    /**
     * value: "SUPPORT"
     * @const
     */
    "SUPPORT": "SUPPORT",
    /**
     * value: "POS"
     * @const
     */
    "POS": "POS",
    /**
     * value: "TICKET"
     * @const
     */
    "TICKET": "TICKET",
    /**
     * value: "FRANCHISE"
     * @const
     */
    "FRANCHISE": "FRANCHISE"  };


  return exports;
}));


