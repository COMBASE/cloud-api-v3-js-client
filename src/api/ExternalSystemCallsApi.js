/**
 * KORONA.cloud API v3
 * Our api provides access to our cloud services
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AddOrUpdateResult', 'model/BadRequestError', 'model/ExternalSystemCall', 'model/ForbiddenError', 'model/NotFoundError', 'model/ResultListExternalSystemCall', 'model/TooManyRequestsError'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AddOrUpdateResult'), require('../model/BadRequestError'), require('../model/ExternalSystemCall'), require('../model/ForbiddenError'), require('../model/NotFoundError'), require('../model/ResultListExternalSystemCall'), require('../model/TooManyRequestsError'));
  } else {
    // Browser globals (root is window)
    if (!root.KoronacloudApiV3) {
      root.KoronacloudApiV3 = {};
    }
    root.KoronacloudApiV3.ExternalSystemCallsApi = factory(root.KoronacloudApiV3.ApiClient, root.KoronacloudApiV3.AddOrUpdateResult, root.KoronacloudApiV3.BadRequestError, root.KoronacloudApiV3.ExternalSystemCall, root.KoronacloudApiV3.ForbiddenError, root.KoronacloudApiV3.NotFoundError, root.KoronacloudApiV3.ResultListExternalSystemCall, root.KoronacloudApiV3.TooManyRequestsError);
  }
}(this, function(ApiClient, AddOrUpdateResult, BadRequestError, ExternalSystemCall, ForbiddenError, NotFoundError, ResultListExternalSystemCall, TooManyRequestsError) {
  'use strict';

  /**
   * ExternalSystemCalls service.
   * @module api/ExternalSystemCallsApi
   * @version 3.0.0
   */

  /**
   * Constructs a new ExternalSystemCallsApi. 
   * @alias module:api/ExternalSystemCallsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the addExternalSystemCalls operation.
     * @callback module:api/ExternalSystemCallsApi~addExternalSystemCallsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AddOrUpdateResult>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * adds a batch of new external system calls
     * 
     * @param {Array.<module:model/ExternalSystemCall>} body an array of new external system calls
     * @param {String} koronaAccountId account id of the korona.cloud account
     * @param {module:api/ExternalSystemCallsApi~addExternalSystemCallsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AddOrUpdateResult>}
     */
    this.addExternalSystemCalls = function(body, koronaAccountId, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addExternalSystemCalls");
      }

      // verify the required parameter 'koronaAccountId' is set
      if (koronaAccountId === undefined || koronaAccountId === null) {
        throw new Error("Missing the required parameter 'koronaAccountId' when calling addExternalSystemCalls");
      }


      var pathParams = {
        'koronaAccountId': koronaAccountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [AddOrUpdateResult];

      return this.apiClient.callApi(
        '/accounts/{koronaAccountId}/externalSystemCalls', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteExternalSystemCall operation.
     * @callback module:api/ExternalSystemCallsApi~deleteExternalSystemCallCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * deletes a single external system call
     * 
     * @param {String} externalSystemCallId id of the related object (important: id should match the uuid-format)
     * @param {String} koronaAccountId account id of the korona.cloud account
     * @param {module:api/ExternalSystemCallsApi~deleteExternalSystemCallCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteExternalSystemCall = function(externalSystemCallId, koronaAccountId, callback) {
      var postBody = null;

      // verify the required parameter 'externalSystemCallId' is set
      if (externalSystemCallId === undefined || externalSystemCallId === null) {
        throw new Error("Missing the required parameter 'externalSystemCallId' when calling deleteExternalSystemCall");
      }

      // verify the required parameter 'koronaAccountId' is set
      if (koronaAccountId === undefined || koronaAccountId === null) {
        throw new Error("Missing the required parameter 'koronaAccountId' when calling deleteExternalSystemCall");
      }


      var pathParams = {
        'externalSystemCallId': externalSystemCallId,
        'koronaAccountId': koronaAccountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/accounts/{koronaAccountId}/externalSystemCalls/{externalSystemCallId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getExternalSystemCall operation.
     * @callback module:api/ExternalSystemCallsApi~getExternalSystemCallCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExternalSystemCall} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * returns a single external system call
     * 
     * @param {String} externalSystemCallId id of the related object (important: id should match the uuid-format)
     * @param {String} koronaAccountId account id of the korona.cloud account
     * @param {module:api/ExternalSystemCallsApi~getExternalSystemCallCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExternalSystemCall}
     */
    this.getExternalSystemCall = function(externalSystemCallId, koronaAccountId, callback) {
      var postBody = null;

      // verify the required parameter 'externalSystemCallId' is set
      if (externalSystemCallId === undefined || externalSystemCallId === null) {
        throw new Error("Missing the required parameter 'externalSystemCallId' when calling getExternalSystemCall");
      }

      // verify the required parameter 'koronaAccountId' is set
      if (koronaAccountId === undefined || koronaAccountId === null) {
        throw new Error("Missing the required parameter 'koronaAccountId' when calling getExternalSystemCall");
      }


      var pathParams = {
        'externalSystemCallId': externalSystemCallId,
        'koronaAccountId': koronaAccountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ExternalSystemCall;

      return this.apiClient.callApi(
        '/accounts/{koronaAccountId}/externalSystemCalls/{externalSystemCallId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getExternalSystemCalls operation.
     * @callback module:api/ExternalSystemCallsApi~getExternalSystemCallsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResultListExternalSystemCall} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * lists all external system calls
     * 
     * @param {String} koronaAccountId account id of the korona.cloud account
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page number of the page to fetch
     * @param {Number} opts.size amount of objects to return per page
     * @param {String} opts.sort attribute to sort by (multiple separated by comma; max. 5)
     * @param {Number} opts.revision last revision number, objects with a greater revision than this will be returned
     * @param {Boolean} opts.includeDeleted indicates deleted objects should be loaded or not (default: false)
     * @param {module:api/ExternalSystemCallsApi~getExternalSystemCallsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResultListExternalSystemCall}
     */
    this.getExternalSystemCalls = function(koronaAccountId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'koronaAccountId' is set
      if (koronaAccountId === undefined || koronaAccountId === null) {
        throw new Error("Missing the required parameter 'koronaAccountId' when calling getExternalSystemCalls");
      }


      var pathParams = {
        'koronaAccountId': koronaAccountId
      };
      var queryParams = {
        'page': opts['page'],
        'size': opts['size'],
        'sort': opts['sort'],
        'revision': opts['revision'],
        'includeDeleted': opts['includeDeleted'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResultListExternalSystemCall;

      return this.apiClient.callApi(
        '/accounts/{koronaAccountId}/externalSystemCalls', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateExternalSystemCall operation.
     * @callback module:api/ExternalSystemCallsApi~updateExternalSystemCallCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updates the single external system call
     * 
     * @param {String} externalSystemCallId id of the related object (important: id should match the uuid-format)
     * @param {module:model/ExternalSystemCall} body the properties to update of the external system call
     * @param {String} koronaAccountId account id of the korona.cloud account
     * @param {module:api/ExternalSystemCallsApi~updateExternalSystemCallCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.updateExternalSystemCall = function(externalSystemCallId, body, koronaAccountId, callback) {
      var postBody = body;

      // verify the required parameter 'externalSystemCallId' is set
      if (externalSystemCallId === undefined || externalSystemCallId === null) {
        throw new Error("Missing the required parameter 'externalSystemCallId' when calling updateExternalSystemCall");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateExternalSystemCall");
      }

      // verify the required parameter 'koronaAccountId' is set
      if (koronaAccountId === undefined || koronaAccountId === null) {
        throw new Error("Missing the required parameter 'koronaAccountId' when calling updateExternalSystemCall");
      }


      var pathParams = {
        'externalSystemCallId': externalSystemCallId,
        'koronaAccountId': koronaAccountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/accounts/{koronaAccountId}/externalSystemCalls/{externalSystemCallId}', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateExternalSystemCalls operation.
     * @callback module:api/ExternalSystemCallsApi~updateExternalSystemCallsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AddOrUpdateResult>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updates a batch of external system calls
     * [number] must be set in the objects, otherwise the object cannot be updated
     * @param {Array.<module:model/ExternalSystemCall>} body an array of existing external system calls
     * @param {String} koronaAccountId account id of the korona.cloud account
     * @param {module:api/ExternalSystemCallsApi~updateExternalSystemCallsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AddOrUpdateResult>}
     */
    this.updateExternalSystemCalls = function(body, koronaAccountId, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateExternalSystemCalls");
      }

      // verify the required parameter 'koronaAccountId' is set
      if (koronaAccountId === undefined || koronaAccountId === null) {
        throw new Error("Missing the required parameter 'koronaAccountId' when calling updateExternalSystemCalls");
      }


      var pathParams = {
        'koronaAccountId': koronaAccountId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [AddOrUpdateResult];

      return this.apiClient.callApi(
        '/accounts/{koronaAccountId}/externalSystemCalls', 'PATCH',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
